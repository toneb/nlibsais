name: Build lib

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  native-build-windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Configure x64
      run: >
        cmake -B build-x64
        -DCMAKE_C_COMPILER=cl
        -DLIBSAIS_BUILD_SHARED_LIB=ON
        -DCMAKE_C_FLAGS="-Ofast"
        -A x64
        -S libsais

    - name: Build x64
      run: cmake --build build-x64 --config Release
      
    - name: Configure x86
      run: >
        cmake -B build-x86
        -DCMAKE_C_COMPILER=cl
        -DLIBSAIS_BUILD_SHARED_LIB=ON
        -DCMAKE_C_FLAGS="-Ofast"
        -A Win32
        -S libsais

    - name: Build x86
      run: cmake --build build-x86 --config Release

    - name: Configure arm64
      run: >
        cmake -B build-arm64
        -DCMAKE_C_COMPILER=cl
        -DLIBSAIS_BUILD_SHARED_LIB=ON
        -DCMAKE_C_FLAGS="-Ofast"
        -A arm64
        -S libsais

    - name: Build arm64
      run: cmake --build build-arm64 --config Release

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: native-windows
        path: |
          build-x64/Release/libsais.dll
          build-x86/Release/libsais.dll
          build-arm64/Release/libsais.dll


  native-build-linux:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Install cross-compile toolchain
      run: sudo apt-get install -y binutils-arm-linux-gnueabihf binutils-aarch64-linux-gnu gcc-arm-linux-gnueabihf gcc-aarch64-linux-gnu

    - name: Configure x64
      run: >
        cmake -B build-x64
        -DCMAKE_C_COMPILER=clang
        -DLIBSAIS_BUILD_SHARED_LIB=ON
        -DCMAKE_C_FLAGS="-Ofast"
        -DCMAKE_SHARED_LIBRARY_PREFIX_C=""
        -S libsais

    - name: Build x64
      run: cmake --build build-x64 --config Release
      
    - name: Configure arm32
      run: >
        cmake -B build-arm32
        -DCMAKE_C_COMPILER=clang
        -DLIBSAIS_BUILD_SHARED_LIB=ON
        -DCMAKE_C_FLAGS="-Ofast"
        -DCMAKE_SYSTEM_PROCESSOR=arm
        -DCMAKE_SYSTEM_NAME=Linux
        -DCMAKE_C_COMPILER_TARGET=arm-linux-gnueabihf
        -DCMAKE_PROGRAM_PATH=/usr/bin/arm-linux-gnueabihf
        -DCMAKE_FIND_ROOT_PATH_MODE_PROGRAM=NEVER
        -DCMAKE_SHARED_LIBRARY_PREFIX_C=""
        -S libsais

    - name: Build arm32
      run: cmake --build build-arm32 --config Release

    - name: Configure arm64
      run: >
        cmake -B build-arm64
        -DCMAKE_C_COMPILER=clang
        -DLIBSAIS_BUILD_SHARED_LIB=ON
        -DCMAKE_C_FLAGS="-Ofast"
        -DCMAKE_SYSTEM_PROCESSOR=aarch64
        -DCMAKE_SYSTEM_NAME=Linux
        -DCMAKE_C_COMPILER_TARGET=aarch64-linux-gnu
        -DCMAKE_PROGRAM_PATH=/usr/bin/aarch64-linux-gnu
        -DCMAKE_FIND_ROOT_PATH_MODE_PROGRAM=NEVER
        -DCMAKE_SHARED_LIBRARY_PREFIX_C=""
        -S libsais

    - name: Build arm64
      run: cmake --build build-arm64 --config Release

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: native-linux
        path: |
          build-x64/libsais.so
          build-arm32/libsais.so
          build-arm64/libsais.so


  native-build-macos:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Configure x64
      run: >
        cmake -B build-x64
        -DCMAKE_C_COMPILER=clang
        -DLIBSAIS_BUILD_SHARED_LIB=ON
        -DCMAKE_C_FLAGS="-Ofast"
        -DCMAKE_SHARED_LIBRARY_PREFIX_C=""
        -DCMAKE_SYSTEM_PROCESSOR=x86_64
        -S libsais

    - name: Build x64
      run: cmake --build build-x64 --config Release
    
    - name: Configure arm64
      run: >
        cmake -B build-arm64
        -DCMAKE_C_COMPILER=clang
        -DLIBSAIS_BUILD_SHARED_LIB=ON
        -DCMAKE_C_FLAGS="-Ofast"
        -DCMAKE_SHARED_LIBRARY_PREFIX_C=""
        -DCMAKE_SYSTEM_PROCESSOR=arm64
        -S libsais

    - name: Build arm64
      run: cmake --build build-arm64 --config Release

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: native-macos
        path: |
          build-x64/libsais.dylib
          build-arm64/libsais.dylib
          
    
  build-nugets:
    needs: [native-build-windows, native-build-linux, native-build-macos]
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive
        
    - name: Download build artifacts
      uses: actions/download-artifact@v3
      with:
        path: build

    - name: Build native nuget package
      run: dotnet pack -c Release src/NLibSais.NativeAssets/NLibSais.NativeAssets.csproj

    - name: Build managed nuget package
      run: |
        mkdir packages
        cp src/NLibSais.NativeAssets/bin/Release/*.nupkg packages
        mv build-nuget.config nuget.config
        dotnet pack -c Release src/NLibSais/NLibSais.csproj

    - name: Upload nuget artifacts
      uses: actions/upload-artifact@v3
      with:
        name: nugets
        path: |
          src/NLibSais.NativeAssets/bin/Release/*.nupkg
          src/NLibSais/bin/Release/*.nupkg
          src/NLibSais/bin/Release/*.snupkg
      
  publish-nugets:
    needs: [build-nugets]
    environment: nuget.org
    runs-on: windows-latest
    steps:
     - name: Download build artifacts
       uses: actions/download-artifact@v3
       with:
         name: nugets
     
     - name: Publish to nuget.ord    
       run: |
         dotnet push *.nupkg -Source https://api.nuget.org/v3/index.json -apikey ${{ secrets.NUGET_APIKEY }}
         